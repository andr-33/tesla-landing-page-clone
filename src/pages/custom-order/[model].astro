---
import Layout from "../../layouts/Layout.astro";
import ItemCarousel from "../../components/ItemCarousel.astro";
import Feature from "../../components/Feature.astro";

import { Icon } from "astro-icon/components";
export function getStaticPaths() {
  return [{ params: { model: "model-s" } }, { params: { model: "model-3" } }];
}

const { model } = Astro.params;
---

<Layout title="Pedido persolanizado" style="overflow-hidden">
  <header class="pt-2 pl-8 w-full">
    <Icon
      class="w-32 h-6 transition-colors nav-button cursor-pointer"
      name="logo"
    />
  </header>
  <main class="w-full h-screen flex flex-row px-8">
    <section class="flex flex-grow basis-0 relative overflow-hidden">
      <div
        id="carousel"
        class="flex flex-row transition-transform w-full h-full"
      >
        <ItemCarousel imagePath="/images/orderViews/modelS/model-s-front.jpeg" />
        <ItemCarousel imagePath="/images/orderViews/modelS/model-s-side.jpeg" />
        <ItemCarousel imagePath="/images/orderViews/modelS/model-s-back.jpeg" />
        <ItemCarousel imagePath="/images/orderViews/modelS/model-s-wheel.jpeg" />
      </div>
      <div class="absolute top-0 start-0 z-30 flex items-center h-full">
        <Icon
          id="prev-button"
          name="bx:chevron-left"
          class="w-8 h-8 cursor-pointer"
        />
      </div>

      <div class="absolute top-0 end-20 z-30 flex items-center h-full">
        <Icon
          id="next-button"
          name="bx:chevron-right"
          class="w-8 h-8 cursor-pointer"
        />
      </div>
    </section>
    <section class="w-96">
      <h1 class="text-center text-4xl pt-10 font-medium">Modelo S</h1>
      <p class="text-center text-sm pt-2">Entrega estimada: feb. – mar. 2024</p>

      <section class="w-full flex flex-row justify-around pt-12 px-5">
        <Feature value="634" unit="Km">
            <p class="text-sm text-gray-500 font-light pt-2" slot="description">
                Autonomía <br/>
                <span class="underline underline-offset-4">(WLTP)</span>
            </p>
        </Feature>
        <Feature value="250" unit="Km/h">
            <p class="text-sm text-gray-500 font-light pt-2" slot="description">
                Velocidad <br/> 
                máxima
            </p>
        </Feature>
        <Feature value="3,2" unit="s">
            <p class="text-sm text-gray-500 font-light pt-2" slot="description">0-100 km/h</p>
        </Feature>
    
      </section>

      <section class="pt-10 px-5">
        <p class="text-base font-medium">Motor dual y tracción integral</p>
        <button
          id="basic-model-button"
          class="w-full rounded border-[3px] border-blue-600 font-medium flex flex-row justify-between p-3 my-2 transition-all ease-linear"
        >
          <p class="text-base pl-1">Model S</p>
          <p class="text-base pr-1">94.990 €</p>
        </button>
        <p class="text-base font-medium">Tracción integral de triple motor</p>
        <button
          id="plaid-model-button"
          class="w-full rounded border text-gray-500 border-gray-500 font-light flex flex-row justify-between p-3 my-2 transition-all ease-linear"
        >
          <p class="text-base pl-1">Model S Plaid</p>
          <p class="text-base pr-1">109.990 €</p>
        </button>
      </section>
    </section>
  </main>
</Layout>

<script>
  const carousel = document.querySelector("#carousel") as HTMLElement;
  const prevButton = document.querySelector("#prev-button");
  const nextButton = document.querySelector("#next-button");

  let slideIndex = 0;

  nextButton?.addEventListener("click", () => {
    if (slideIndex < carousel?.children.length - 1) {
      slideIndex = (slideIndex + 1) % carousel?.children.length;
      carousel.style.transform = `translateX(${-slideIndex * 100}%)`;
    }
  });

  prevButton?.addEventListener("click", () => {
    if (slideIndex > 0) {
      slideIndex =
        (slideIndex - 1 + carousel?.children.length) %
        carousel?.children.length;
      carousel.style.transform = `translateX(${-slideIndex * 100}%)`;
    }
  });
</script>

<script>
  const homeButton = document.querySelector(".nav-button");
  homeButton?.addEventListener("click", () => {
    window.location.href = "/";
  });
</script>

<script>
    const basicModelButton =  document.querySelector("#basic-model-button") as HTMLElement;
    const plaidModelButton =  document.querySelector("#plaid-model-button") as HTMLElement;

    basicModelButton?.addEventListener("click",()=>{
        basicModelButton.style.border = "3px solid rgb(37 99 235)";
        basicModelButton.style.fontWeight = "500";
        basicModelButton.style.color = "black";

        plaidModelButton.style.border = "1px solid rgb(107 114 128)";
        plaidModelButton.style.fontWeight = "300";
        plaidModelButton.style.color = "rgb(107 114 128)";

    });

    plaidModelButton?.addEventListener("click",()=>{
        plaidModelButton.style.border = "3px solid rgb(37 99 235)";
        plaidModelButton.style.fontWeight = "500";
        plaidModelButton.style.color = "black";

        basicModelButton.style.border = "1px solid rgb(107 114 128)";
        basicModelButton.style.fontWeight = "300";
        basicModelButton.style.color = "rgb(107 114 128)";
    });
</script>